// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Final_Project_Assignment.Models;

#nullable disable

namespace Final_Project_Assignment.Data
{
    public partial class DMVRecordsContext : DbContext
    {
        public DMVRecordsContext()
        {
        }

        public DMVRecordsContext(DbContextOptions<DMVRecordsContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Dmv> Dmvs { get; set; }
        public virtual DbSet<Driver> Drivers { get; set; }
        public virtual DbSet<DriverInfraction> DriverInfractions { get; set; }
        public virtual DbSet<Infraction> Infractions { get; set; }
        public virtual DbSet<Law> Laws { get; set; }
        public virtual DbSet<Vehicle> Vehicles { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.Entity<Dmv>(entity =>
            {
                entity.ToTable("DMV");

                entity.Property(e => e.DmvId)
                    .ValueGeneratedNever()
                    .HasColumnName("dmvID");

                entity.Property(e => e.DmvFirstName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dmvFirstName");

                entity.Property(e => e.DmvLastName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dmvLastName");
            });

            modelBuilder.Entity<Driver>(entity =>
            {
                entity.Property(e => e.DriverId)
                    .ValueGeneratedNever()
                    .HasColumnName("DriverID");

                entity.Property(e => e.DmvId).HasColumnName("dmvID");

                entity.Property(e => e.DriverFirstName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DriverLastName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DriverLicensePlateNo)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.HasOne(d => d.Dmv)
                    .WithMany(p => p.Drivers)
                    .HasForeignKey(d => d.DmvId)
                    .HasConstraintName("FK_Drivers_DMV");
            });

            modelBuilder.Entity<DriverInfraction>(entity =>
            {
                entity.HasKey(e => new { e.DriverId, e.InfractionId });

                entity.ToTable("Driver_Infractions");

                entity.Property(e => e.DriverId).HasColumnName("DriverID");

                entity.Property(e => e.InfractionId).HasColumnName("InfractionID");

                entity.HasOne(d => d.Driver)
                    .WithMany(p => p.DriverInfractions)
                    .HasForeignKey(d => d.DriverId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Driver_Infractions_Drivers");

                entity.HasOne(d => d.Infraction)
                    .WithMany(p => p.DriverInfractions)
                    .HasForeignKey(d => d.InfractionId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Driver_Infractions_Infractions");
            });

            modelBuilder.Entity<Infraction>(entity =>
            {
                entity.Property(e => e.InfractionId)
                    .ValueGeneratedNever()
                    .HasColumnName("InfractionID");

                entity.Property(e => e.InfractionType)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Law>(entity =>
            {
                entity.ToTable("LAW");

                entity.Property(e => e.LawId)
                    .ValueGeneratedNever()
                    .HasColumnName("lawID");

                entity.Property(e => e.LawFirstName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("lawFirstName");

                entity.Property(e => e.LawLastName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("lawLastName");
            });

            modelBuilder.Entity<Vehicle>(entity =>
            {
                entity.Property(e => e.VehicleId)
                    .ValueGeneratedNever()
                    .HasColumnName("VehicleID");

                entity.Property(e => e.DmvId).HasColumnName("DmvID");

                entity.Property(e => e.DriverId).HasColumnName("DriverID");

                entity.Property(e => e.LawId).HasColumnName("LawID");

                entity.Property(e => e.VehicleName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.Dmv)
                    .WithMany(p => p.Vehicles)
                    .HasForeignKey(d => d.DmvId)
                    .HasConstraintName("FK_Vehicles_DMV");

                entity.HasOne(d => d.Driver)
                    .WithMany(p => p.Vehicles)
                    .HasForeignKey(d => d.DriverId)
                    .HasConstraintName("FK_Vehicles_Drivers");

                entity.HasOne(d => d.Law)
                    .WithMany(p => p.Vehicles)
                    .HasForeignKey(d => d.LawId)
                    .HasConstraintName("FK_Vehicles_LAW");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}